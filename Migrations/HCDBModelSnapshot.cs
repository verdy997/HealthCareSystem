// <auto-generated />
using System;
using HealthCareSystem;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthCareSystem.Migrations
{
    [DbContext(typeof(HCDB))]
    partial class HCDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("HealthCareSystem.Model.Ambulance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DoctorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("DoctorID");

                    b.ToTable("Ambulances");
                });

            modelBuilder.Entity("HealthCareSystem.Model.Doctor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("HealthCareSystem.Model.Examination", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AmbulanceID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Anamnesis")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DoctorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Includes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("PatientIdentificationNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("AmbulanceID");

                    b.HasIndex("DoctorID");

                    b.HasIndex("PatientIdentificationNumber");

                    b.ToTable("Examinations");
                });

            modelBuilder.Entity("HealthCareSystem.Model.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmbulanceID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PatientIdentificationNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("AmbulanceID");

                    b.HasIndex("PatientIdentificationNumber");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HealthCareSystem.Model.Patient", b =>
                {
                    b.Property<long>("IdentificationNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Allergies")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("AmbulanceID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CodeInsurance")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Employer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Postcode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdentificationNumber");

                    b.HasIndex("AmbulanceID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("HealthCareSystem.Model.Prescription", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DoctorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Drug")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("PatientIdentificationNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("DoctorID");

                    b.HasIndex("PatientIdentificationNumber");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("HealthCareSystem.Model.Vaccination", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<long>("PatientIdentificationNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeOfVaccination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("PatientIdentificationNumber");

                    b.ToTable("Vaccinations");
                });

            modelBuilder.Entity("HealthCareSystem.Model.WorkInability", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfPublic")
                        .HasColumnType("TEXT");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ended")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("From")
                        .HasColumnType("TEXT");

                    b.Property<long>("PatientIdentificationNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("PatientIdentificationNumber");

                    b.ToTable("WorkInabilities");
                });

            modelBuilder.Entity("HealthCareSystem.Model.Ambulance", b =>
                {
                    b.HasOne("HealthCareSystem.Model.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorID");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("HealthCareSystem.Model.Examination", b =>
                {
                    b.HasOne("HealthCareSystem.Model.Ambulance", "Ambulance")
                        .WithMany()
                        .HasForeignKey("AmbulanceID");

                    b.HasOne("HealthCareSystem.Model.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorID");

                    b.HasOne("HealthCareSystem.Model.Patient", "Patient")
                        .WithMany("Examinations")
                        .HasForeignKey("PatientIdentificationNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambulance");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HealthCareSystem.Model.Order", b =>
                {
                    b.HasOne("HealthCareSystem.Model.Ambulance", "Ambulance")
                        .WithMany("Orders")
                        .HasForeignKey("AmbulanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HealthCareSystem.Model.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientIdentificationNumber");

                    b.Navigation("Ambulance");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HealthCareSystem.Model.Patient", b =>
                {
                    b.HasOne("HealthCareSystem.Model.Ambulance", "Ambulance")
                        .WithMany("Archive")
                        .HasForeignKey("AmbulanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambulance");
                });

            modelBuilder.Entity("HealthCareSystem.Model.Prescription", b =>
                {
                    b.HasOne("HealthCareSystem.Model.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorID");

                    b.HasOne("HealthCareSystem.Model.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PatientIdentificationNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HealthCareSystem.Model.Vaccination", b =>
                {
                    b.HasOne("HealthCareSystem.Model.Patient", "Patient")
                        .WithMany("Vaccinations")
                        .HasForeignKey("PatientIdentificationNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HealthCareSystem.Model.WorkInability", b =>
                {
                    b.HasOne("HealthCareSystem.Model.Patient", "Patient")
                        .WithMany("WorkInabilities")
                        .HasForeignKey("PatientIdentificationNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HealthCareSystem.Model.Ambulance", b =>
                {
                    b.Navigation("Archive");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("HealthCareSystem.Model.Patient", b =>
                {
                    b.Navigation("Examinations");

                    b.Navigation("Prescriptions");

                    b.Navigation("Vaccinations");

                    b.Navigation("WorkInabilities");
                });
#pragma warning restore 612, 618
        }
    }
}
